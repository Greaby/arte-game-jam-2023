using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;

namespace SCPE
{
    public sealed class FogRenderer : PostProcessEffectRenderer<Fog>
    {
        Shader shader;
        private int skyboxTexID = Shader.PropertyToID("_SkyboxTex");

        struct MipLevel
        {
            internal int down;
            internal int up;
        }

        MipLevel[] m_Pyramid;
        const int k_MaxPyramidSize = 16;

        enum Pass
        {
            Prefilter,
            Downsample,
            Upsample,
            Blend,
            BlendScattering
        }

        public override void Init()
        {
            shader = Shader.Find(ShaderNames.Fog);

            m_Pyramid = new MipLevel[k_MaxPyramidSize];

            for (int i = 0; i < k_MaxPyramidSize; i++)
            {
                m_Pyramid[i] = new MipLevel
                {
                    down = Shader.PropertyToID("_BloomMipDown" + i),
                    up = Shader.PropertyToID("_BloomMipUp" + i)
                };
            }
        }
        
        //Keep this collapsed, otherwise brings Rider to a crawl :')
        #region SkysphereMesh
        //Unable to reference a mesh anywhere, except through a Monobehaviour, creating it from precomputed arrays instead
        //Mesh is a geosphere with 12 segments. Unable to extract the actual skybox mesh that Unity uses internally
        private static readonly Vector3[] skySphereVertices = new Vector3[] { new Vector3(7.629511E-06f, 0.5f, 7.629511E-06f), new Vector3(-0.09169909f, 0.4915007f, 7.629511E-06f), new Vector3(-0.02829786f, 0.4915007f, -0.08719768f), new Vector3(-0.120798f, 0.477203f, -0.08779278f), new Vector3(-0.1803998f, 0.4662928f, 7.629511E-06f), new Vector3(-0.120798f, 0.477203f, 0.08779278f), new Vector3(-0.02829786f, 0.4915007f, 0.08719768f), new Vector3(7.629511E-06f, 0.5f, 7.629511E-06f), new Vector3(-0.05570306f, 0.4662928f, -0.1715038f), new Vector3(-0.2105974f, 0.4447929f, -0.08840314f), new Vector3(-0.1491951f, 0.4447929f, -0.1729992f), new Vector3(-0.2105974f, 0.4447929f, 0.08840314f), new Vector3(-0.2629053f, 0.4253071f, 7.629511E-06f), new Vector3(-0.05570306f, 0.4662928f, 0.1715038f), new Vector3(-0.1491951f, 0.4447929f, 0.1729992f), new Vector3(0.04610514f, 0.477203f, -0.1419928f), new Vector3(0.07419699f, 0.4915007f, -0.0539025f), new Vector3(7.629511E-06f, 0.5f, 7.629511E-06f), new Vector3(0.1458991f, 0.4662928f, -0.1059968f), new Vector3(0.01900511f, 0.4447929f, -0.2275959f), new Vector3(0.1184024f, 0.4447929f, -0.1952926f), new Vector3(-0.08120088f, 0.4253071f, -0.2499962f), new Vector3(0.2127031f, 0.4253071f, -0.1545052f), new Vector3(0.2223926f, 0.4447929f, -0.0523003f), new Vector3(0.2902037f, 0.3944076f, -0.1010071f), new Vector3(0.09160754f, 0.4026932f, -0.281796f), new Vector3(0.1856947f, 0.3944076f, -0.2447929f), new Vector3(0.2721981f, 0.3699016f, -0.1977951f), new Vector3(-0.006294346f, 0.3944076f, -0.3072022f), new Vector3(0.3495003f, 0.3272069f, -0.1442054f), new Vector3(0.3632944f, 0.3401007f, -0.04869917f), new Vector3(0.4181048f, 0.2584039f, -0.09169909f), new Vector3(-0.1755016f, 0.3944076f, -0.2523003f), new Vector3(-0.1039979f, 0.3699016f, -0.3200046f), new Vector3(-0.2398032f, 0.4026932f, -0.1742046f), new Vector3(-0.2942016f, 0.3944076f, -0.08890669f), new Vector3(0.0660029f, 0.3401007f, -0.3605936f), new Vector3(-0.02919814f, 0.3272069f, -0.376997f), new Vector3(0.1585946f, 0.3401007f, -0.3305028f), new Vector3(0.2452049f, 0.3272069f, -0.2877928f), new Vector3(0.3225071f, 0.3019074f, -0.2342947f), new Vector3(0.3966964f, 0.2452049f, -0.1803998f), new Vector3(0.4488975f, 0.1663004f, -0.1442054f), new Vector3(0.466598f, 0.1728008f, -0.04869917f), new Vector3(0.4761044f, 0.119501f, -0.07979705f), new Vector3(0.467895f, 0.119501f, -0.1198062f), new Vector3(0.4826047f, 0.08319981f, -0.1010071f), new Vector3(0.4526055f, 0.07799649f, -0.1977951f), new Vector3(0.4508965f, 0.119501f, -0.1726024f), new Vector3(0.4315023f, 0.119501f, -0.2177996f), new Vector3(0.4141985f, 0.1534066f, -0.2342947f), new Vector3(0.361799f, 0.2235981f, -0.2629053f), new Vector3(0.2940948f, 0.2452049f, -0.3215f), new Vector3(0.4073015f, 0.119501f, -0.2600061f), new Vector3(0.3993057f, 0.07990387f, -0.2900969f), new Vector3(0.3507973f, 0.1534066f, -0.3215f), new Vector3(0.3731975f, 0.119501f, -0.3070039f), new Vector3(0.2165026f, 0.2584039f, -0.3693065f), new Vector3(0.3404974f, 0.119501f, -0.3429999f), new Vector3(0.275906f, 0.1663004f, -0.3823987f), new Vector3(0.1314031f, 0.2629053f, -0.4044938f), new Vector3(0.1905013f, 0.1728008f, -0.4288014f), new Vector3(0.04200046f, 0.2584039f, -0.4259937f), new Vector3(0.09789425f, 0.1728008f, -0.4588006f), new Vector3(0.001594568f, 0.1663004f, -0.4714961f), new Vector3(-0.04900435f, 0.2452049f, -0.4329976f), new Vector3(-0.1231937f, 0.3019074f, -0.3791028f), new Vector3(-0.1979934f, 0.3272069f, -0.3220951f), new Vector3(-0.265301f, 0.3401007f, -0.2528954f), new Vector3(-0.3225071f, 0.3401007f, -0.1740978f), new Vector3(-0.1381933f, 0.2235981f, -0.4253071f), new Vector3(-0.2149004f, 0.2452049f, -0.3791028f), new Vector3(-0.2842985f, 0.2584039f, -0.3200046f), new Vector3(-0.09479667f, 0.1534066f, -0.4662928f), new Vector3(-0.1973983f, 0.1534066f, -0.4329976f), new Vector3(-0.3440986f, 0.2629053f, -0.2499962f), new Vector3(-0.2783932f, 0.1663004f, -0.3805982f), new Vector3(-0.3489052f, 0.1728008f, -0.3137026f), new Vector3(-0.3675059f, 0.3272069f, -0.08879988f), new Vector3(-0.392195f, 0.2584039f, -0.1715038f), new Vector3(-0.406096f, 0.1728008f, -0.234905f), new Vector3(-0.4479972f, 0.1663004f, -0.1471962f), new Vector3(-0.3363928f, 0.3699016f, 7.629511E-06f), new Vector3(-0.426894f, 0.2452049f, -0.08719768f), new Vector3(-0.2942016f, 0.3944076f, 0.08890669f), new Vector3(-0.3986038f, 0.3019074f, 7.629511E-06f), new Vector3(-0.2398032f, 0.4026932f, 0.1742046f), new Vector3(-0.3675059f, 0.3272069f, 0.08879988f), new Vector3(-0.3225071f, 0.3401007f, 0.1740978f), new Vector3(-0.4472038f, 0.2235981f, 7.629511E-06f), new Vector3(-0.426894f, 0.2452049f, 0.08719768f), new Vector3(-0.4727932f, 0.1534066f, -0.0539025f), new Vector3(-0.392195f, 0.2584039f, 0.1715038f), new Vector3(-0.4727932f, 0.1534066f, 0.0539025f), new Vector3(-0.4479972f, 0.1663004f, 0.1471962f), new Vector3(-0.1755016f, 0.3944076f, 0.2523003f), new Vector3(-0.265301f, 0.3401007f, 0.2528954f), new Vector3(-0.3440986f, 0.2629053f, 0.2499962f), new Vector3(-0.406096f, 0.1728008f, 0.234905f), new Vector3(-0.08120088f, 0.4253071f, 0.2499962f), new Vector3(-0.1979934f, 0.3272069f, 0.3220951f), new Vector3(-0.2842985f, 0.2584039f, 0.3200046f), new Vector3(-0.3489052f, 0.1728008f, 0.3137026f), new Vector3(-0.2783932f, 0.1663004f, 0.3805982f), new Vector3(-0.1039979f, 0.3699016f, 0.3200046f), new Vector3(-0.2149004f, 0.2452049f, 0.3791028f), new Vector3(-0.1231937f, 0.3019074f, 0.3791028f), new Vector3(0.01900511f, 0.4447929f, 0.2275959f), new Vector3(-0.006294346f, 0.3944076f, 0.3072022f), new Vector3(-0.02919814f, 0.3272069f, 0.376997f), new Vector3(0.04610514f, 0.477203f, 0.1419928f), new Vector3(0.07419699f, 0.4915007f, 0.0539025f), new Vector3(7.629511E-06f, 0.5f, 7.629511E-06f), new Vector3(-0.1381933f, 0.2235981f, 0.4253071f), new Vector3(-0.1973983f, 0.1534066f, 0.4329976f), new Vector3(-0.04900435f, 0.2452049f, 0.4329976f), new Vector3(-0.09479667f, 0.1534066f, 0.4662928f), new Vector3(0.09160754f, 0.4026932f, 0.281796f), new Vector3(0.1184024f, 0.4447929f, 0.1952926f), new Vector3(0.0660029f, 0.3401007f, 0.3605936f), new Vector3(0.04200046f, 0.2584039f, 0.4259937f), new Vector3(0.001594568f, 0.1663004f, 0.4714961f), new Vector3(0.1458991f, 0.4662928f, 0.1059968f), new Vector3(0.1856947f, 0.3944076f, 0.2447929f), new Vector3(0.1585946f, 0.3401007f, 0.3305028f), new Vector3(0.1314031f, 0.2629053f, 0.4044938f), new Vector3(0.09789425f, 0.1728008f, 0.4588006f), new Vector3(0.2127031f, 0.4253071f, 0.1545052f), new Vector3(0.1493019f, 0.477203f, 7.629511E-06f), new Vector3(0.07419699f, 0.4915007f, -0.0539025f), new Vector3(7.629511E-06f, 0.5f, 7.629511E-06f), new Vector3(0.1458991f, 0.4662928f, -0.1059968f), new Vector3(0.2223926f, 0.4447929f, -0.0523003f), new Vector3(0.2223926f, 0.4447929f, 0.0523003f), new Vector3(0.2963989f, 0.4026932f, 7.629511E-06f), new Vector3(0.2902037f, 0.3944076f, -0.1010071f), new Vector3(0.3632944f, 0.3401007f, -0.04869917f), new Vector3(0.2902037f, 0.3944076f, 0.1010071f), new Vector3(0.2721981f, 0.3699016f, 0.1977951f), new Vector3(0.3632944f, 0.3401007f, 0.04869917f), new Vector3(0.2452049f, 0.3272069f, 0.2877928f), new Vector3(0.3495003f, 0.3272069f, 0.1442054f), new Vector3(0.4253071f, 0.2629053f, 7.629511E-06f), new Vector3(0.4181048f, 0.2584039f, -0.09169909f), new Vector3(0.466598f, 0.1728008f, -0.04869917f), new Vector3(0.4181048f, 0.2584039f, 0.09169909f), new Vector3(0.3225071f, 0.3019074f, 0.2342947f), new Vector3(0.2165026f, 0.2584039f, 0.3693065f), new Vector3(0.466598f, 0.1728008f, 0.04869917f), new Vector3(0.3966964f, 0.2452049f, 0.1803998f), new Vector3(0.2940948f, 0.2452049f, 0.3215f), new Vector3(0.275906f, 0.1663004f, 0.3823987f), new Vector3(0.1905013f, 0.1728008f, 0.4288014f), new Vector3(0.361799f, 0.2235981f, 0.2629053f), new Vector3(0.4488975f, 0.1663004f, 0.1442054f), new Vector3(0.3507973f, 0.1534066f, 0.3215f), new Vector3(0.4141985f, 0.1534066f, 0.2342947f), new Vector3(0.4315023f, 0.119501f, 0.2177996f), new Vector3(0.4073015f, 0.119501f, 0.2600061f), new Vector3(0.3993057f, 0.07990387f, 0.2900969f), new Vector3(0.3731975f, 0.119501f, 0.3070039f), new Vector3(0.3278935f, 0.07799649f, 0.3693065f), new Vector3(0.3404974f, 0.119501f, 0.3429999f), new Vector3(0.3034943f, 0.119501f, 0.3753948f), new Vector3(0.2586023f, 0.119501f, 0.4080034f), new Vector3(0.245098f, 0.08319981f, 0.4277943f), new Vector3(0.223003f, 0.119501f, 0.4282063f), new Vector3(0.1673075f, 0.119501f, 0.4530022f), new Vector3(0.1522927f, 0.08500038f, 0.4685969f), new Vector3(0.1308995f, 0.119501f, 0.4647974f), new Vector3(0.07120623f, 0.119501f, 0.4774929f), new Vector3(0.05309376f, 0.08319981f, 0.4902037f), new Vector3(0.03060197f, 0.119501f, 0.4819944f), new Vector3(-0.02480354f, 0.119501f, 0.4821012f), new Vector3(-0.07380026f, 0.119501f, 0.4777066f), new Vector3(-0.04819562f, 0.07799649f, 0.4915007f), new Vector3(-0.1525063f, 0.07990387f, 0.4694057f), new Vector3(-0.1213932f, 0.119501f, 0.4678035f), new Vector3(-0.1767071f, 0.119501f, 0.4497978f), new Vector3(-0.2499046f, 0.07799649f, 0.4259937f), new Vector3(-0.221004f, 0.119501f, 0.4297932f), new Vector3(-0.2633021f, 0.119501f, 0.4047074f), new Vector3(-0.3081025f, 0.119501f, 0.3720073f), new Vector3(-0.3310979f, 0.08319981f, 0.3652934f), new Vector3(-0.3383001f, 0.119501f, 0.3444037f), new Vector3(-0.3791028f, 0.119501f, 0.2990997f), new Vector3(-0.3986038f, 0.08500038f, 0.2895933f), new Vector3(-0.4015946f, 0.119501f, 0.2680934f), new Vector3(-0.4320973f, 0.119501f, 0.2152972f), new Vector3(-0.4497978f, 0.08319981f, 0.2020066f), new Vector3(-0.4490044f, 0.119501f, 0.1780957f), new Vector3(-0.4662013f, 0.119501f, 0.1254063f), new Vector3(-0.4770962f, 0.119501f, 0.07740139f), new Vector3(-0.4824063f, 0.07799649f, 0.1059968f), new Vector3(-0.4936065f, 0.07990387f, 7.629511E-06f), new Vector3(-0.4824063f, 0.119501f, 0.02899977f), new Vector3(-0.4824063f, 0.119501f, -0.02899977f), new Vector3(-0.4824063f, 0.07799649f, -0.1059968f), new Vector3(-0.4770962f, 0.119501f, -0.07740139f), new Vector3(-0.4662013f, 0.119501f, -0.1254063f), new Vector3(-0.4490044f, 0.119501f, -0.1780957f), new Vector3(-0.4497978f, 0.08319981f, -0.2020066f), new Vector3(-0.4320973f, 0.119501f, -0.2152972f), new Vector3(-0.4015946f, 0.119501f, -0.2680934f), new Vector3(-0.3986038f, 0.08500038f, -0.2895933f), new Vector3(-0.3791028f, 0.119501f, -0.2990997f), new Vector3(-0.3383001f, 0.119501f, -0.3444037f), new Vector3(-0.3310979f, 0.08319981f, -0.3652934f), new Vector3(-0.3081025f, 0.119501f, -0.3720073f), new Vector3(-0.2633021f, 0.119501f, -0.4047074f), new Vector3(-0.221004f, 0.119501f, -0.4297932f), new Vector3(-0.2499046f, 0.07799649f, -0.4259937f), new Vector3(-0.1525063f, 0.07990387f, -0.4694057f), new Vector3(-0.1767071f, 0.119501f, -0.4497978f), new Vector3(-0.1213932f, 0.119501f, -0.4678035f), new Vector3(-0.04819562f, 0.07799649f, -0.4915007f), new Vector3(-0.07380026f, 0.119501f, -0.4777066f), new Vector3(-0.02480354f, 0.119501f, -0.4821012f), new Vector3(0.03060197f, 0.119501f, -0.4819944f), new Vector3(0.05309376f, 0.08319981f, -0.4902037f), new Vector3(0.07120623f, 0.119501f, -0.4774929f), new Vector3(0.1308995f, 0.119501f, -0.4647974f), new Vector3(0.1522927f, 0.08500038f, -0.4685969f), new Vector3(0.1673075f, 0.119501f, -0.4530022f), new Vector3(0.223003f, 0.119501f, -0.4282063f), new Vector3(0.245098f, 0.08319981f, -0.4277943f), new Vector3(0.2586023f, 0.119501f, -0.4080034f), new Vector3(0.3034943f, 0.119501f, -0.3753948f), new Vector3(0.3278935f, 0.07799649f, -0.3693065f), new Vector3(0.3128939f, 0.04369421f, -0.3847944f), new Vector3(0.3471046f, 0.04369421f, -0.3540017f), new Vector3(0.268307f, 0.04369421f, -0.416701f), new Vector3(0.2253071f, 0.04369421f, -0.4414969f), new Vector3(0.3041962f, 0.02370489f, -0.3937972f), new Vector3(0.3867018f, 0.04369421f, -0.3102998f), new Vector3(0.3583047f, 0.02370489f, -0.3451057f), new Vector3(0.2938964f, 7.629511E-06f, -0.4044938f), new Vector3(0.3715953f, 7.629511E-06f, -0.3346075f), new Vector3(0.2799954f, 0.02370489f, -0.4111009f), new Vector3(0.2033951f, 7.629511E-06f, -0.4568017f), new Vector3(0.2152972f, 0.02370489f, -0.4485008f), new Vector3(0.1771038f, 0.04369421f, -0.4629053f), new Vector3(0.4145952f, 0.04369421f, -0.2718929f), new Vector3(0.3798047f, 0.02370489f, -0.3213932f), new Vector3(0.423003f, 0.02370489f, -0.2618982f), new Vector3(0.4329976f, 7.629511E-06f, -0.2499962f), new Vector3(0.4439994f, 0.04369421f, -0.2208057f), new Vector3(0.1890974f, 0.02370489f, -0.4600977f), new Vector3(0.1039979f, 7.629511E-06f, -0.489105f), new Vector3(0.1173953f, 0.02370489f, -0.4833982f), new Vector3(0.4389944f, 0.02370489f, -0.2340963f), new Vector3(0.475494f, 7.629511E-06f, -0.1545052f), new Vector3(0.462707f, 0.04369421f, -0.178706f), new Vector3(0.4685054f, 0.02370489f, -0.1677043f), new Vector3(0.4792019f, 0.04369421f, -0.1263981f), new Vector3(0.4895934f, 0.04369421f, -0.07779812f), new Vector3(0.4931029f, 0.02370489f, -0.06609445f), new Vector3(0.4774929f, 0.02370489f, -0.1392004f), new Vector3(0.4972992f, 7.629511E-06f, -0.0523003f), new Vector3(0.4927977f, -0.02359808f, -0.06850538f), new Vector3(0.4775998f, -0.02359808f, -0.1397955f), new Vector3(0.4895018f, -0.04079499f, -0.0803006f), new Vector3(0.4682002f, -0.02359808f, -0.1679942f), new Vector3(0.4790951f, -0.04079499f, -0.1292058f), new Vector3(0.4824063f, -0.07799649f, -0.1059968f), new Vector3(0.4629053f, -0.04079499f, -0.1778058f), new Vector3(0.4497978f, -0.08319981f, -0.2020066f), new Vector3(0.4378042f, -0.02359808f, -0.2364004f), new Vector3(0.441207f, -0.04079499f, -0.2264973f), new Vector3(0.4235065f, -0.02359808f, -0.260998f), new Vector3(0.4165026f, -0.04079499f, -0.2689937f), new Vector3(0.3986038f, -0.08500038f, -0.2895933f), new Vector3(0.3791028f, -0.02359808f, -0.3220951f), new Vector3(0.384596f, -0.04079499f, -0.3130007f), new Vector3(0.3601053f, -0.02359808f, -0.3433051f), new Vector3(0.3516976f, -0.04079499f, -0.3496071f), new Vector3(0.3310979f, -0.08319981f, -0.3652934f), new Vector3(0.3043946f, -0.02359808f, -0.3934005f), new Vector3(0.3121004f, -0.04079499f, -0.3852979f), new Vector3(0.2806058f, -0.02359808f, -0.4109941f), new Vector3(0.2709011f, -0.04079499f, -0.4156939f), new Vector3(0.2174029f, -0.02359808f, -0.4474937f), new Vector3(0.2277028f, -0.04079499f, -0.4407035f), new Vector3(0.2499046f, -0.07799649f, -0.4259937f), new Vector3(0.1525063f, -0.07990387f, -0.4694057f), new Vector3(0.1773938f, -0.04079499f, -0.4631952f), new Vector3(0.188304f, -0.02359808f, -0.4604944f), new Vector3(0.1182956f, -0.02359808f, -0.4833066f), new Vector3(0.1287938f, -0.04079499f, -0.4790036f), new Vector3(0.04819562f, -0.07799649f, -0.4915007f), new Vector3(0.07480735f, -0.04079499f, -0.4902953f), new Vector3(0.08710612f, -0.02359808f, -0.489807f), new Vector3(7.629511E-06f, 7.629511E-06f, -0.5f), new Vector3(0.01459525f, -0.02359808f, -0.497406f), new Vector3(0.02520027f, -0.04079499f, -0.4956054f), new Vector3(-0.0150988f, -0.02359808f, -0.4972076f), new Vector3(-0.1039979f, 7.629511E-06f, -0.489105f), new Vector3(-0.02599374f, -0.04079499f, -0.4951934f), new Vector3(-0.05309376f, -0.08319981f, -0.4902037f), new Vector3(-0.08950179f, -0.02359808f, -0.489395f), new Vector3(-0.07900359f, -0.04079499f, -0.4895934f), new Vector3(-0.1173953f, -0.02359808f, -0.4833982f), new Vector3(-0.1271f, -0.04079499f, -0.4792935f), new Vector3(-0.1522927f, -0.08500038f, -0.4685969f), new Vector3(-0.1787976f, -0.04079499f, -0.4624933f), new Vector3(-0.1892042f, -0.02359808f, -0.4600977f), new Vector3(-0.2033951f, 7.629511E-06f, -0.4568017f), new Vector3(-0.2152056f, -0.02359808f, -0.4485008f), new Vector3(-0.2237964f, -0.04079499f, -0.4425956f), new Vector3(-0.245098f, -0.08319981f, -0.4277943f), new Vector3(-0.2700008f, -0.04079499f, -0.4159075f), new Vector3(-0.2801022f, -0.02359808f, -0.4111009f), new Vector3(-0.2938964f, 7.629511E-06f, -0.4044938f), new Vector3(-0.3041962f, -0.02359808f, -0.393904f), new Vector3(-0.3117037f, -0.04079499f, -0.3861067f), new Vector3(-0.3487984f, -0.04079499f, -0.3527047f), new Vector3(-0.3583963f, -0.02359808f, -0.3451057f), new Vector3(-0.3715953f, 7.629511E-06f, -0.3346075f), new Vector3(-0.3278935f, -0.07799649f, -0.3693065f), new Vector3(-0.3993057f, -0.07990387f, -0.2900969f), new Vector3(-0.3856947f, -0.04079499f, -0.311902f), new Vector3(-0.3798047f, -0.02359808f, -0.3213932f), new Vector3(-0.4158007f, -0.04079499f, -0.2705043f), new Vector3(-0.4526055f, -0.07799649f, -0.1977951f), new Vector3(-0.4432059f, -0.04079499f, -0.2226978f), new Vector3(-0.4230945f, -0.02359808f, -0.2618982f), new Vector3(-0.4329976f, 7.629511E-06f, -0.2499962f), new Vector3(-0.4389029f, -0.02359808f, -0.2342031f), new Vector3(-0.475494f, 7.629511E-06f, -0.1545052f), new Vector3(-0.4685969f, -0.02359808f, -0.1675975f), new Vector3(-0.4635004f, -0.04079499f, -0.1771038f), new Vector3(-0.4774929f, -0.02359808f, -0.1393072f), new Vector3(-0.4972992f, 7.629511E-06f, -0.0523003f), new Vector3(-0.4790036f, -0.04079499f, -0.1283055f), new Vector3(-0.4826047f, -0.08319981f, -0.1010071f), new Vector3(-0.4931029f, -0.02359808f, -0.06609445f), new Vector3(-0.4900969f, -0.04079499f, -0.07610437f), new Vector3(-0.4960021f, -0.02359808f, -0.03769741f), new Vector3(-0.4951018f, -0.04079499f, -0.02719921f), new Vector3(-0.4927062f, -0.08500038f, 7.629511E-06f), new Vector3(-0.4951018f, -0.04079499f, 0.02719921f), new Vector3(-0.4960021f, -0.02359808f, 0.03769741f), new Vector3(-0.4972992f, 7.629511E-06f, 0.0523003f), new Vector3(-0.4931029f, -0.02359808f, 0.06609445f), new Vector3(-0.4900969f, -0.04079499f, 0.07610437f), new Vector3(-0.4826047f, -0.08319981f, 0.1010071f), new Vector3(-0.4790036f, -0.04079499f, 0.1283055f), new Vector3(-0.4774929f, -0.02359808f, 0.1393072f), new Vector3(-0.475494f, 7.629511E-06f, 0.1545052f), new Vector3(-0.4685969f, -0.02359808f, 0.1675975f), new Vector3(-0.4635004f, -0.04079499f, 0.1771038f), new Vector3(-0.4432059f, -0.04079499f, 0.2226978f), new Vector3(-0.4389029f, -0.02359808f, 0.2342031f), new Vector3(-0.4329976f, 7.629511E-06f, 0.2499962f), new Vector3(-0.4526055f, -0.07799649f, 0.1977951f), new Vector3(-0.3993057f, -0.07990387f, 0.2900969f), new Vector3(-0.4158007f, -0.04079499f, 0.2705043f), new Vector3(-0.4230945f, -0.02359808f, 0.2618982f), new Vector3(-0.3856947f, -0.04079499f, 0.311902f), new Vector3(-0.3278935f, -0.07799649f, 0.3693065f), new Vector3(-0.3487984f, -0.04079499f, 0.3527047f), new Vector3(-0.3798047f, -0.02359808f, 0.3213932f), new Vector3(-0.3715953f, 7.629511E-06f, 0.3346075f), new Vector3(-0.3583963f, -0.02359808f, 0.3451057f), new Vector3(-0.2938964f, 7.629511E-06f, 0.4044938f), new Vector3(-0.3041962f, -0.02359808f, 0.393904f), new Vector3(-0.3117037f, -0.04079499f, 0.3861067f), new Vector3(-0.2801022f, -0.02359808f, 0.4111009f), new Vector3(-0.2033951f, 7.629511E-06f, 0.4568017f), new Vector3(-0.2700008f, -0.04079499f, 0.4159075f), new Vector3(-0.245098f, -0.08319981f, 0.4277943f), new Vector3(-0.2152056f, -0.02359808f, 0.4485008f), new Vector3(-0.2237964f, -0.04079499f, 0.4425956f), new Vector3(-0.1892042f, -0.02359808f, 0.4600977f), new Vector3(-0.1787976f, -0.04079499f, 0.4624933f), new Vector3(-0.1522927f, -0.08500038f, 0.4685969f), new Vector3(-0.1271f, -0.04079499f, 0.4792935f), new Vector3(-0.1173953f, -0.02359808f, 0.4833982f), new Vector3(-0.1039979f, 7.629511E-06f, 0.489105f), new Vector3(-0.08950179f, -0.02359808f, 0.489395f), new Vector3(-0.07900359f, -0.04079499f, 0.4895934f), new Vector3(-0.05309376f, -0.08319981f, 0.4902037f), new Vector3(-0.02599374f, -0.04079499f, 0.4951934f), new Vector3(-0.0150988f, -0.02359808f, 0.4972076f), new Vector3(7.629511E-06f, 7.629511E-06f, 0.5f), new Vector3(0.01459525f, -0.02359808f, 0.497406f), new Vector3(0.02520027f, -0.04079499f, 0.4956054f), new Vector3(0.07480735f, -0.04079499f, 0.4902953f), new Vector3(0.08710612f, -0.02359808f, 0.489807f), new Vector3(0.1039979f, 7.629511E-06f, 0.489105f), new Vector3(0.04819562f, -0.07799649f, 0.4915007f), new Vector3(0.1525063f, -0.07990387f, 0.4694057f), new Vector3(0.1287938f, -0.04079499f, 0.4790036f), new Vector3(0.1182956f, -0.02359808f, 0.4833066f), new Vector3(0.1773938f, -0.04079499f, 0.4631952f), new Vector3(0.2499046f, -0.07799649f, 0.4259937f), new Vector3(0.2277028f, -0.04079499f, 0.4407035f), new Vector3(0.188304f, -0.02359808f, 0.4604944f), new Vector3(0.2033951f, 7.629511E-06f, 0.4568017f), new Vector3(0.2174029f, -0.02359808f, 0.4474937f), new Vector3(0.2938964f, 7.629511E-06f, 0.4044938f), new Vector3(0.2806058f, -0.02359808f, 0.4109941f), new Vector3(0.2709011f, -0.04079499f, 0.4156939f), new Vector3(0.3043946f, -0.02359808f, 0.3934005f), new Vector3(0.3715953f, 7.629511E-06f, 0.3346075f), new Vector3(0.3121004f, -0.04079499f, 0.3852979f), new Vector3(0.3310979f, -0.08319981f, 0.3652934f), new Vector3(0.3601053f, -0.02359808f, 0.3433051f), new Vector3(0.3516976f, -0.04079499f, 0.3496071f), new Vector3(0.3791028f, -0.02359808f, 0.3220951f), new Vector3(0.384596f, -0.04079499f, 0.3130007f), new Vector3(0.3986038f, -0.08500038f, 0.2895933f), new Vector3(0.4165026f, -0.04079499f, 0.2689937f), new Vector3(0.4235065f, -0.02359808f, 0.260998f), new Vector3(0.4329976f, 7.629511E-06f, 0.2499962f), new Vector3(0.4378042f, -0.02359808f, 0.2364004f), new Vector3(0.441207f, -0.04079499f, 0.2264973f), new Vector3(0.4497978f, -0.08319981f, 0.2020066f), new Vector3(0.4629053f, -0.04079499f, 0.1778058f), new Vector3(0.4682002f, -0.02359808f, 0.1679942f), new Vector3(0.475494f, 7.629511E-06f, 0.1545052f), new Vector3(0.4775998f, -0.02359808f, 0.1397955f), new Vector3(0.4790951f, -0.04079499f, 0.1292058f), new Vector3(0.4895018f, -0.04079499f, 0.0803006f), new Vector3(0.4927977f, -0.02359808f, 0.06850538f), new Vector3(0.4972992f, 7.629511E-06f, 0.0523003f), new Vector3(0.4824063f, -0.07799649f, 0.1059968f), new Vector3(0.4936065f, -0.07990387f, 7.629511E-06f), new Vector3(0.495407f, -0.04079499f, 0.02559701f), new Vector3(0.4962005f, -0.02359808f, 0.03679713f), new Vector3(0.495407f, -0.04079499f, -0.02559701f), new Vector3(0.4962005f, -0.02359808f, -0.03679713f), new Vector3(0.4824063f, -0.07799649f, -0.1059968f), new Vector3(0.4895018f, -0.04079499f, -0.0803006f), new Vector3(0.4927977f, -0.02359808f, -0.06850538f), new Vector3(0.4972992f, 7.629511E-06f, -0.0523003f), new Vector3(0.4765011f, -0.1243992f, -0.07390707f), new Vector3(0.4810025f, -0.1243992f, -0.03269245f), new Vector3(0.4727932f, -0.1534066f, -0.0539025f), new Vector3(0.4810025f, -0.1243992f, 0.03269245f), new Vector3(0.4765011f, -0.1243992f, 0.07390707f), new Vector3(0.4727932f, -0.1534066f, 0.0539025f), new Vector3(0.4642939f, -0.1243992f, 0.1276951f), new Vector3(0.4479972f, -0.1663004f, 0.1471962f), new Vector3(0.4472038f, -0.2235981f, 7.629511E-06f), new Vector3(0.426894f, -0.2452049f, -0.08719768f), new Vector3(0.4488975f, -0.1243992f, 0.1747997f), new Vector3(0.426894f, -0.2452049f, 0.08719768f), new Vector3(0.3986038f, -0.3019074f, 7.629511E-06f), new Vector3(0.3675059f, -0.3272069f, -0.08879988f), new Vector3(0.4297017f, -0.1243992f, 0.2170977f), new Vector3(0.406096f, -0.1728008f, 0.234905f), new Vector3(0.392195f, -0.2584039f, 0.1715038f), new Vector3(0.3363928f, -0.3699016f, 7.629511E-06f), new Vector3(0.2942016f, -0.3944076f, -0.08890669f), new Vector3(0.3675059f, -0.3272069f, 0.08879988f), new Vector3(0.4020066f, -0.1243992f, 0.2649958f), new Vector3(0.2629053f, -0.4253071f, 7.629511E-06f), new Vector3(0.2105974f, -0.4447929f, -0.08840314f), new Vector3(0.2942016f, -0.3944076f, 0.08890669f), new Vector3(0.3225071f, -0.3401007f, 0.1740978f), new Vector3(0.3762951f, -0.1243992f, 0.3003967f), new Vector3(0.3440986f, -0.2629053f, 0.2499962f), new Vector3(0.3489052f, -0.1728008f, 0.3137026f), new Vector3(0.1803998f, -0.4662928f, 7.629511E-06f), new Vector3(0.120798f, -0.477203f, -0.08779278f), new Vector3(0.2105974f, -0.4447929f, 0.08840314f), new Vector3(0.3393072f, -0.1243992f, 0.3415961f), new Vector3(0.2398032f, -0.4026932f, 0.1742046f), new Vector3(0.265301f, -0.3401007f, 0.2528954f), new Vector3(0.09169909f, -0.4915007f, 7.629511E-06f), new Vector3(0.02829786f, -0.4915007f, -0.08719768f), new Vector3(7.629511E-06f, -0.5f, 7.629511E-06f), new Vector3(0.3048981f, -0.1243992f, 0.3729076f), new Vector3(0.2842985f, -0.2584039f, 0.3200046f), new Vector3(0.2783932f, -0.1663004f, 0.3805982f), new Vector3(0.120798f, -0.477203f, 0.08779278f), new Vector3(0.2649043f, -0.1243992f, 0.4020981f), new Vector3(0.1973983f, -0.1534066f, 0.4329976f), new Vector3(0.2176013f, -0.1243992f, 0.4302968f), new Vector3(0.2149004f, -0.2452049f, 0.3791028f), new Vector3(0.02829786f, -0.4915007f, 0.08719768f), new Vector3(7.629511E-06f, -0.5f, 7.629511E-06f), new Vector3(0.1491951f, -0.4447929f, 0.1729992f), new Vector3(0.1796979f, -0.1243992f, 0.4474021f), new Vector3(0.1175937f, -0.1243992f, 0.4676051f), new Vector3(0.07689784f, -0.1243992f, 0.4759976f), new Vector3(0.09479667f, -0.1534066f, 0.4662928f), new Vector3(0.02199588f, -0.1243992f, 0.4810025f), new Vector3(-0.001594568f, -0.1663004f, 0.4714961f), new Vector3(0.1381933f, -0.2235981f, 0.4253071f), new Vector3(-0.02750439f, -0.1243992f, 0.4808957f), new Vector3(0.04900435f, -0.2452049f, 0.4329976f), new Vector3(0.1231937f, -0.3019074f, 0.3791028f), new Vector3(-0.07369345f, -0.1243992f, 0.4757992f), new Vector3(-0.09789425f, -0.1728008f, 0.4588006f), new Vector3(-0.04200046f, -0.2584039f, 0.4259937f), new Vector3(-0.1278019f, -0.1243992f, 0.4642023f), new Vector3(-0.169398f, -0.1243992f, 0.4506981f), new Vector3(-0.1905013f, -0.1728008f, 0.4288014f), new Vector3(-0.2199969f, -0.1243992f, 0.4282063f), new Vector3(-0.2604028f, -0.1243992f, 0.4051957f), new Vector3(-0.275906f, -0.1663004f, 0.3823987f), new Vector3(-0.1314031f, -0.2629053f, 0.4044938f), new Vector3(0.02919814f, -0.3272069f, 0.376997f), new Vector3(-0.3005951f, -0.1243992f, 0.3762036f), new Vector3(-0.3507973f, -0.1534066f, 0.3215f), new Vector3(-0.3419928f, -0.1243992f, 0.3399023f), new Vector3(-0.2165026f, -0.2584039f, 0.3693065f), new Vector3(-0.0660029f, -0.3401007f, 0.3605936f), new Vector3(-0.2940948f, -0.2452049f, 0.3215f), new Vector3(-0.1585946f, -0.3401007f, 0.3305028f), new Vector3(-0.3699016f, -0.1243992f, 0.3092012f), new Vector3(-0.4082933f, -0.1243992f, 0.2562982f), new Vector3(-0.428893f, -0.1243992f, 0.2201953f), new Vector3(-0.4141985f, -0.1534066f, 0.2342947f), new Vector3(-0.4506981f, -0.1243992f, 0.1695964f), new Vector3(-0.4488975f, -0.1663004f, 0.1442054f), new Vector3(-0.361799f, -0.2235981f, 0.2629053f), new Vector3(-0.4658961f, -0.1243992f, 0.1224002f), new Vector3(-0.3966964f, -0.2452049f, 0.1803998f), new Vector3(-0.3225071f, -0.3019074f, 0.2342947f), new Vector3(-0.4752041f, -0.1243992f, 0.07689784f), new Vector3(-0.466598f, -0.1728008f, 0.04869917f), new Vector3(-0.4181048f, -0.2584039f, 0.09169909f), new Vector3(-0.4810025f, -0.1243992f, 0.02190433f), new Vector3(-0.4810025f, -0.1243992f, -0.02190433f), new Vector3(-0.466598f, -0.1728008f, -0.04869917f), new Vector3(-0.4752041f, -0.1243992f, -0.07689784f), new Vector3(-0.4658961f, -0.1243992f, -0.1224002f), new Vector3(-0.4488975f, -0.1663004f, -0.1442054f), new Vector3(-0.4253071f, -0.2629053f, 7.629511E-06f), new Vector3(-0.3495003f, -0.3272069f, 0.1442054f), new Vector3(-0.4506981f, -0.1243992f, -0.1695964f), new Vector3(-0.4141985f, -0.1534066f, -0.2342947f), new Vector3(-0.428893f, -0.1243992f, -0.2201953f), new Vector3(-0.4181048f, -0.2584039f, -0.09169909f), new Vector3(-0.3632944f, -0.3401007f, 0.04869917f), new Vector3(-0.3966964f, -0.2452049f, -0.1803998f), new Vector3(-0.3632944f, -0.3401007f, -0.04869917f), new Vector3(-0.4082933f, -0.1243992f, -0.2562982f), new Vector3(-0.3699016f, -0.1243992f, -0.3092012f), new Vector3(-0.3419928f, -0.1243992f, -0.3399023f), new Vector3(-0.3507973f, -0.1534066f, -0.3215f), new Vector3(-0.3005951f, -0.1243992f, -0.3762036f), new Vector3(-0.275906f, -0.1663004f, -0.3823987f), new Vector3(-0.361799f, -0.2235981f, -0.2629053f), new Vector3(-0.2604028f, -0.1243992f, -0.4051957f), new Vector3(-0.2940948f, -0.2452049f, -0.3215f), new Vector3(-0.3225071f, -0.3019074f, -0.2342947f), new Vector3(-0.2199969f, -0.1243992f, -0.4282063f), new Vector3(-0.1905013f, -0.1728008f, -0.4288014f), new Vector3(-0.2165026f, -0.2584039f, -0.3693065f), new Vector3(-0.169398f, -0.1243992f, -0.4506981f), new Vector3(-0.1278019f, -0.1243992f, -0.4642023f), new Vector3(-0.09789425f, -0.1728008f, -0.4588006f), new Vector3(-0.07369345f, -0.1243992f, -0.4757992f), new Vector3(-0.02750439f, -0.1243992f, -0.4808957f), new Vector3(-0.001594568f, -0.1663004f, -0.4714961f), new Vector3(-0.1314031f, -0.2629053f, -0.4044938f), new Vector3(-0.2452049f, -0.3272069f, -0.2877928f), new Vector3(0.02199588f, -0.1243992f, -0.4810025f), new Vector3(0.09479667f, -0.1534066f, -0.4662928f), new Vector3(0.07689784f, -0.1243992f, -0.4759976f), new Vector3(-0.04200046f, -0.2584039f, -0.4259937f), new Vector3(-0.1585946f, -0.3401007f, -0.3305028f), new Vector3(0.04900435f, -0.2452049f, -0.4329976f), new Vector3(-0.0660029f, -0.3401007f, -0.3605936f), new Vector3(0.1175937f, -0.1243992f, -0.4676051f), new Vector3(0.1796979f, -0.1243992f, -0.4474021f), new Vector3(0.2176013f, -0.1243992f, -0.4302968f), new Vector3(0.1973983f, -0.1534066f, -0.4329976f), new Vector3(0.2649043f, -0.1243992f, -0.4020981f), new Vector3(0.2783932f, -0.1663004f, -0.3805982f), new Vector3(0.1381933f, -0.2235981f, -0.4253071f), new Vector3(0.3048981f, -0.1243992f, -0.3729076f), new Vector3(0.2149004f, -0.2452049f, -0.3791028f), new Vector3(0.1231937f, -0.3019074f, -0.3791028f), new Vector3(0.3393072f, -0.1243992f, -0.3415961f), new Vector3(0.3489052f, -0.1728008f, -0.3137026f), new Vector3(0.2842985f, -0.2584039f, -0.3200046f), new Vector3(0.3762951f, -0.1243992f, -0.3003967f), new Vector3(0.4020066f, -0.1243992f, -0.2649958f), new Vector3(0.406096f, -0.1728008f, -0.234905f), new Vector3(0.4297017f, -0.1243992f, -0.2170977f), new Vector3(0.4488975f, -0.1243992f, -0.1747997f), new Vector3(0.4479972f, -0.1663004f, -0.1471962f), new Vector3(0.4642939f, -0.1243992f, -0.1276951f), new Vector3(0.4765011f, -0.1243992f, -0.07390707f), new Vector3(0.4727932f, -0.1534066f, -0.0539025f), new Vector3(0.426894f, -0.2452049f, -0.08719768f), new Vector3(0.392195f, -0.2584039f, -0.1715038f), new Vector3(0.3675059f, -0.3272069f, -0.08879988f), new Vector3(0.3440986f, -0.2629053f, -0.2499962f), new Vector3(0.3225071f, -0.3401007f, -0.1740978f), new Vector3(0.2942016f, -0.3944076f, -0.08890669f), new Vector3(0.265301f, -0.3401007f, -0.2528954f), new Vector3(0.2398032f, -0.4026932f, -0.1742046f), new Vector3(0.2105974f, -0.4447929f, -0.08840314f), new Vector3(0.1979934f, -0.3272069f, -0.3220951f), new Vector3(0.1491951f, -0.4447929f, -0.1729992f), new Vector3(0.120798f, -0.477203f, -0.08779278f), new Vector3(0.1755016f, -0.3944076f, -0.2523003f), new Vector3(0.1039979f, -0.3699016f, -0.3200046f), new Vector3(0.05570306f, -0.4662928f, -0.1715038f), new Vector3(0.02829786f, -0.4915007f, -0.08719768f), new Vector3(0.08120088f, -0.4253071f, -0.2499962f), new Vector3(0.02919814f, -0.3272069f, -0.376997f), new Vector3(0.006294346f, -0.3944076f, -0.3072022f), new Vector3(-0.01900511f, -0.4447929f, -0.2275959f), new Vector3(-0.09160754f, -0.4026932f, -0.281796f), new Vector3(-0.04610514f, -0.477203f, -0.1419928f), new Vector3(-0.1184024f, -0.4447929f, -0.1952926f), new Vector3(-0.1856947f, -0.3944076f, -0.2447929f), new Vector3(-0.07419699f, -0.4915007f, -0.0539025f), new Vector3(7.629511E-06f, -0.5f, 7.629511E-06f), new Vector3(-0.1458991f, -0.4662928f, -0.1059968f), new Vector3(-0.2127031f, -0.4253071f, -0.1545052f), new Vector3(-0.2721981f, -0.3699016f, -0.1977951f), new Vector3(-0.3495003f, -0.3272069f, -0.1442054f), new Vector3(-0.2902037f, -0.3944076f, -0.1010071f), new Vector3(-0.2223926f, -0.4447929f, -0.0523003f), new Vector3(-0.2963989f, -0.4026932f, 7.629511E-06f), new Vector3(-0.1493019f, -0.477203f, 7.629511E-06f), new Vector3(-0.2223926f, -0.4447929f, 0.0523003f), new Vector3(-0.2902037f, -0.3944076f, 0.1010071f), new Vector3(-0.07419699f, -0.4915007f, 0.0539025f), new Vector3(7.629511E-06f, -0.5f, 7.629511E-06f), new Vector3(-0.1458991f, -0.4662928f, 0.1059968f), new Vector3(-0.2127031f, -0.4253071f, 0.1545052f), new Vector3(-0.2721981f, -0.3699016f, 0.1977951f), new Vector3(-0.2452049f, -0.3272069f, 0.2877928f), new Vector3(-0.1856947f, -0.3944076f, 0.2447929f), new Vector3(-0.1184024f, -0.4447929f, 0.1952926f), new Vector3(-0.09160754f, -0.4026932f, 0.281796f), new Vector3(-0.04610514f, -0.477203f, 0.1419928f), new Vector3(-0.01900511f, -0.4447929f, 0.2275959f), new Vector3(0.006294346f, -0.3944076f, 0.3072022f), new Vector3(7.629511E-06f, -0.5f, 7.629511E-06f), new Vector3(0.05570306f, -0.4662928f, 0.1715038f), new Vector3(0.08120088f, -0.4253071f, 0.2499962f), new Vector3(0.1039979f, -0.3699016f, 0.3200046f), new Vector3(0.1755016f, -0.3944076f, 0.2523003f), new Vector3(0.1979934f, -0.3272069f, 0.3220951f), new Vector3(0.1287938f, 0.04369421f, -0.4786068f), new Vector3(0.07729457f, 0.04369421f, -0.4895934f), new Vector3(0.08950179f, 0.02370489f, -0.489395f), new Vector3(0.02790112f, 0.04369421f, -0.4947967f), new Vector3(0.0150988f, 0.02370489f, -0.4972076f), new Vector3(-0.02700084f, 0.04369421f, -0.4951934f), new Vector3(-0.01470207f, 0.02370489f, -0.497406f), new Vector3(-0.07279316f, 0.04369421f, -0.4904021f), new Vector3(-0.08699931f, 0.02370489f, -0.489807f), new Vector3(-0.1184024f, 0.02370489f, -0.4831998f), new Vector3(-0.1305028f, 0.04369421f, -0.4783017f), new Vector3(-0.188304f, 0.02370489f, -0.4604944f), new Vector3(-0.1755932f, 0.04369421f, -0.4636988f), new Vector3(-0.2174945f, 0.02370489f, -0.4474021f), new Vector3(-0.2293965f, 0.04369421f, -0.439498f), new Vector3(-0.280499f, 0.02370489f, -0.4109941f), new Vector3(-0.2692989f, 0.04369421f, -0.4165026f), new Vector3(-0.3045014f, 0.02370489f, -0.3932936f), new Vector3(-0.3133974f, 0.04369421f, -0.3838941f), new Vector3(-0.3599985f, 0.02370489f, -0.3433051f), new Vector3(-0.3502937f, 0.04369421f, -0.3507057f), new Vector3(-0.3791028f, 0.02370489f, -0.3220035f), new Vector3(-0.3854963f, 0.04369421f, -0.3115053f), new Vector3(-0.4152972f, 0.04369421f, -0.2703975f), new Vector3(-0.4233997f, 0.02370489f, -0.2611048f), new Vector3(-0.4418021f, 0.04369421f, -0.2248035f), new Vector3(-0.4378042f, 0.02370489f, -0.2362936f), new Vector3(-0.462005f, 0.04369421f, -0.1793927f), new Vector3(-0.4682002f, 0.02370489f, -0.1679942f), new Vector3(-0.4794003f, 0.04369421f, -0.1274052f), new Vector3(-0.4775998f, 0.02370489f, -0.1397955f), new Vector3(-0.4889067f, 0.04369421f, -0.08240635f), new Vector3(-0.4927062f, 0.02370489f, -0.06859693f), new Vector3(-0.4962005f, 0.02370489f, -0.03670558f), new Vector3(-0.4951934f, 0.04369421f, -0.02370489f), new Vector3(-0.4962005f, 0.02370489f, 0.03670558f), new Vector3(-0.4951934f, 0.04369421f, 0.02370489f), new Vector3(-0.4927062f, 0.02370489f, 0.06859693f), new Vector3(-0.4889067f, 0.04369421f, 0.08240635f), new Vector3(-0.4775998f, 0.02370489f, 0.1397955f), new Vector3(-0.4794003f, 0.04369421f, 0.1274052f), new Vector3(-0.4682002f, 0.02370489f, 0.1679942f), new Vector3(-0.462005f, 0.04369421f, 0.1793927f), new Vector3(-0.4378042f, 0.02370489f, 0.2362936f), new Vector3(-0.4418021f, 0.04369421f, 0.2248035f), new Vector3(-0.4233997f, 0.02370489f, 0.2611048f), new Vector3(-0.4152972f, 0.04369421f, 0.2703975f), new Vector3(-0.3854963f, 0.04369421f, 0.3115053f), new Vector3(-0.3791028f, 0.02370489f, 0.3220035f), new Vector3(-0.3502937f, 0.04369421f, 0.3507057f), new Vector3(-0.3599985f, 0.02370489f, 0.3433051f), new Vector3(-0.3133974f, 0.04369421f, 0.3838941f), new Vector3(-0.3045014f, 0.02370489f, 0.3932936f), new Vector3(-0.2692989f, 0.04369421f, 0.4165026f), new Vector3(-0.280499f, 0.02370489f, 0.4109941f), new Vector3(-0.2293965f, 0.04369421f, 0.439498f), new Vector3(-0.2174945f, 0.02370489f, 0.4474021f), new Vector3(-0.188304f, 0.02370489f, 0.4604944f), new Vector3(-0.1755932f, 0.04369421f, 0.4636988f), new Vector3(-0.1184024f, 0.02370489f, 0.4831998f), new Vector3(-0.1305028f, 0.04369421f, 0.4783017f), new Vector3(-0.08699931f, 0.02370489f, 0.489807f), new Vector3(-0.07279316f, 0.04369421f, 0.4904021f), new Vector3(-0.01470207f, 0.02370489f, 0.497406f), new Vector3(-0.02700084f, 0.04369421f, 0.4951934f), new Vector3(0.0150988f, 0.02370489f, 0.4972076f), new Vector3(0.02790112f, 0.04369421f, 0.4947967f), new Vector3(0.08950179f, 0.02370489f, 0.489395f), new Vector3(0.07729457f, 0.04369421f, 0.4895934f), new Vector3(0.1173953f, 0.02370489f, 0.4833982f), new Vector3(0.1287938f, 0.04369421f, 0.4786068f), new Vector3(0.1771038f, 0.04369421f, 0.4629053f), new Vector3(0.1890974f, 0.02370489f, 0.4600977f), new Vector3(0.2253071f, 0.04369421f, 0.4414969f), new Vector3(0.2152972f, 0.02370489f, 0.4485008f), new Vector3(0.268307f, 0.04369421f, 0.416701f), new Vector3(0.2799954f, 0.02370489f, 0.4111009f), new Vector3(0.3128939f, 0.04369421f, 0.3847944f), new Vector3(0.3041962f, 0.02370489f, 0.3937972f), new Vector3(0.3471046f, 0.04369421f, 0.3540017f), new Vector3(0.3583047f, 0.02370489f, 0.3451057f), new Vector3(0.3798047f, 0.02370489f, 0.3213932f), new Vector3(0.3867018f, 0.04369421f, 0.3102998f), new Vector3(0.423003f, 0.02370489f, 0.2618982f), new Vector3(0.4389944f, 0.02370489f, 0.2340963f), new Vector3(0.4145952f, 0.04369421f, 0.2718929f), new Vector3(0.4439994f, 0.04369421f, 0.2208057f), new Vector3(0.4685054f, 0.02370489f, 0.1677043f), new Vector3(0.4526055f, 0.07799649f, 0.1977951f), new Vector3(0.4774929f, 0.02370489f, 0.1392004f), new Vector3(0.462707f, 0.04369421f, 0.178706f), new Vector3(0.4826047f, 0.08319981f, 0.1010071f), new Vector3(0.4508965f, 0.119501f, 0.1726024f), new Vector3(0.4792019f, 0.04369421f, 0.1263981f), new Vector3(0.467895f, 0.119501f, 0.1198062f), new Vector3(0.4931029f, 0.02370489f, 0.06609445f), new Vector3(0.4761044f, 0.119501f, 0.07979705f), new Vector3(0.4927062f, 0.08500038f, 7.629511E-06f), new Vector3(0.4895934f, 0.04369421f, 0.07779812f), new Vector3(0.4824979f, 0.119501f, 0.01909667f), new Vector3(0.4824979f, 0.119501f, -0.01909667f), new Vector3(0.4761044f, 0.119501f, -0.07979705f), new Vector3(0.4826047f, 0.08319981f, -0.1010071f), new Vector3(0.4960021f, 0.02370489f, 0.03769741f), new Vector3(0.4949035f, 0.04369421f, 0.02539864f), new Vector3(0.4949035f, 0.04369421f, -0.02539864f), new Vector3(0.4895934f, 0.04369421f, -0.07779812f), new Vector3(0.4960021f, 0.02370489f, -0.03769741f), new Vector3(0.4931029f, 0.02370489f, -0.06609445f),  };
        private static readonly int[] skySphereTriangles = new int[] { 0,1,2,1,3,2,1,4,3,1,5,4,6,5,1,7,6,1,2,3,8,4,9,3,3,10,8,3,9,10,5,11,4,4,12,9,4,11,12,6,13,5,5,14,11,13,14,5,2,8,15,2,15,16,17,2,16,16,15,18,8,19,15,15,20,18,15,19,20,8,21,19,8,10,21,18,20,22,18,22,23,22,24,23,19,25,20,20,26,22,20,25,26,22,27,24,22,26,27,21,28,19,19,28,25,27,29,24,24,29,30,29,31,30,10,32,21,21,33,28,21,32,33,10,34,32,9,34,10,9,35,34,12,35,9,28,36,25,33,37,28,28,37,36,25,36,38,25,38,26,26,38,39,26,39,27,27,39,40,27,40,29,40,41,29,29,41,31,42,31,41,43,31,42,44,43,42,42,45,44,46,44,45,47,46,45,45,48,47,45,42,48,49,48,42,47,48,49,42,41,50,42,50,49,40,51,41,50,41,51,39,52,40,40,52,51,47,49,53,50,53,49,53,54,47,51,55,50,55,51,52,56,53,50,56,54,53,50,55,56,39,57,52,38,57,39,55,58,56,54,56,58,55,52,59,59,52,57,58,55,59,38,60,57,36,60,38,59,57,61,61,57,60,36,62,60,37,62,36,61,60,63,63,60,62,63,62,64,37,65,62,64,62,65,66,65,37,33,66,37,33,67,66,32,67,33,32,68,67,34,68,32,34,69,68,35,69,34,66,70,65,67,71,66,66,71,70,68,72,67,67,72,71,73,65,70,64,65,73,74,70,71,70,74,73,69,75,68,68,75,72,76,71,72,74,71,76,77,72,75,76,72,77,35,78,69,69,79,75,78,79,69,77,75,80,80,75,79,80,79,81,82,78,35,12,82,35,78,83,79,81,79,83,12,84,82,11,84,12,82,85,78,85,83,78,11,86,84,14,86,11,84,87,82,82,87,85,86,88,84,84,88,87,85,89,83,87,90,85,85,90,89,91,83,89,81,83,91,88,92,87,87,92,90,93,89,90,89,93,91,94,90,92,93,90,94,14,95,86,86,96,88,95,96,86,88,97,92,96,97,88,94,92,98,98,92,97,99,95,14,13,99,14,95,100,96,96,101,97,100,101,96,98,97,102,102,97,101,102,101,103,99,104,95,104,100,95,100,105,101,103,101,105,104,106,100,106,105,100,13,107,99,99,108,104,107,108,99,104,109,106,108,109,104,110,107,13,6,110,13,111,110,6,112,111,6,106,113,105,103,105,114,114,105,113,106,115,113,109,115,106,113,116,114,116,113,115,107,117,108,110,118,107,118,117,107,108,119,109,117,119,108,109,120,115,119,120,109,116,115,121,121,115,120,122,118,110,111,122,110,118,123,117,117,124,119,123,124,117,119,125,120,124,125,119,121,120,126,126,120,125,122,127,118,127,123,118,111,128,122,129,128,111,130,129,111,129,131,128,131,132,128,128,133,122,128,132,133,122,133,127,132,134,133,132,135,134,135,136,134,133,137,127,133,134,137,127,138,123,127,137,138,134,136,139,134,139,137,138,140,123,123,140,124,137,141,138,137,139,141,136,142,139,136,143,142,144,142,143,139,142,145,139,145,141,138,141,146,138,146,140,140,147,124,124,147,125,148,142,144,148,145,142,141,145,149,141,149,146,146,150,140,140,150,147,151,147,150,152,125,147,152,147,151,126,125,152,146,153,150,146,149,153,154,149,145,154,145,148,155,150,153,151,150,155,156,153,149,156,149,154,153,156,155,157,156,154,155,156,158,156,157,158,159,158,157,158,160,155,158,159,160,160,159,161,161,162,160,155,160,162,151,155,162,161,163,162,162,163,151,164,151,163,164,163,161,161,165,164,165,166,164,151,164,166,166,152,151,167,152,166,167,166,165,165,168,167,152,167,169,168,169,167,169,126,152,170,126,169,170,169,168,168,171,170,126,170,172,171,172,170,172,121,126,173,121,172,173,172,171,121,173,174,174,116,121,171,175,173,175,174,173,174,175,176,116,174,177,176,177,174,114,116,177,177,178,114,177,176,178,178,176,179,179,180,178,114,178,180,103,114,180,179,181,180,180,181,103,182,103,181,182,181,179,179,183,182,183,184,182,103,182,184,184,102,103,185,102,184,185,184,183,183,186,185,102,185,187,186,187,185,187,98,102,188,98,187,188,187,186,186,189,188,98,188,190,189,190,188,190,94,98,191,94,190,191,190,189,94,191,192,192,93,94,189,193,191,193,192,191,192,193,194,93,192,195,194,195,192,91,93,195,195,196,91,195,194,196,196,194,197,197,198,196,91,196,198,81,91,198,197,199,198,198,199,81,200,81,199,200,199,197,197,201,200,201,202,200,81,200,202,202,80,81,203,80,202,203,202,201,201,204,203,80,203,205,204,205,203,205,77,80,206,77,205,206,205,204,204,207,206,77,206,208,207,208,206,208,76,77,209,76,208,209,208,207,76,209,210,210,74,76,207,211,209,211,210,209,210,211,212,74,210,213,212,213,210,73,74,213,213,214,73,213,212,214,214,212,215,215,216,214,73,214,216,64,73,216,215,217,216,216,217,64,218,64,217,218,217,215,215,219,218,219,220,218,64,218,220,220,63,64,221,63,220,221,220,219,219,222,221,63,221,223,222,223,221,223,61,63,224,61,223,224,223,222,222,225,224,61,224,226,225,226,224,226,59,61,227,59,226,227,226,225,59,227,58,228,58,227,225,228,227,58,228,54,229,228,225,54,228,230,228,229,230,225,231,229,232,225,222,231,225,232,230,229,233,233,229,231,230,234,54,233,235,230,234,230,235,235,233,236,236,237,235,231,238,233,236,233,238,239,236,238,240,238,231,231,232,240,238,240,239,222,241,232,240,232,241,54,234,242,47,54,242,235,243,234,235,237,243,242,234,243,243,244,242,244,243,237,237,245,244,242,246,47,246,242,244,239,240,247,241,247,240,248,239,247,249,247,241,247,249,248,244,245,250,244,250,246,250,245,251,47,246,252,46,47,252,246,250,253,253,252,246,251,253,250,252,254,46,254,252,253,255,46,254,256,255,254,253,257,254,254,257,256,251,257,253,258,256,257,257,251,258,259,258,251,251,260,259,261,259,260,251,262,260,262,251,245,260,263,261,263,260,262,264,261,263,262,265,263,264,263,265,265,266,264,265,262,267,245,267,262,267,268,265,268,266,265,245,269,267,268,267,269,266,268,270,269,270,268,270,271,266,272,269,245,245,237,272,273,270,269,269,272,273,273,271,270,237,274,272,273,272,274,271,273,275,274,275,273,275,276,271,277,274,237,237,236,277,278,275,274,274,277,278,278,276,275,236,279,277,278,277,279,276,278,280,279,280,278,281,279,236,236,239,281,282,280,279,279,281,282,280,283,276,283,280,282,284,283,282,282,285,284,285,282,281,281,239,286,281,286,285,287,286,239,239,248,287,288,285,286,284,285,288,286,287,288,289,284,288,288,290,289,290,288,287,287,248,291,287,291,290,291,248,292,290,291,293,292,293,291,293,294,290,289,290,294,294,293,295,292,295,293,295,292,296,295,297,294,289,294,297,297,298,289,297,295,299,296,299,295,299,300,297,300,298,297,300,299,301,296,301,299,298,300,302,301,302,300,302,303,298,304,302,301,304,303,302,305,301,296,301,305,304,296,306,305,304,305,307,306,307,305,303,304,308,307,308,304,308,309,303,310,308,307,310,309,308,311,307,306,307,311,310,306,312,311,310,311,313,312,313,311,309,310,314,313,314,310,315,314,313,316,313,312,313,316,315,312,317,316,314,318,309,318,314,315,319,318,315,315,320,319,320,315,316,316,321,320,316,317,321,322,320,321,319,320,322,323,319,322,322,324,323,321,325,322,325,321,317,324,322,325,317,326,325,325,327,324,325,326,327,327,326,328,324,327,329,328,329,327,329,330,324,323,324,330,330,329,331,328,331,329,331,328,332,331,333,330,323,330,333,333,334,323,333,331,335,332,335,331,335,336,333,336,334,333,336,335,337,332,337,335,334,336,338,337,338,336,338,339,334,340,338,337,340,339,338,341,337,332,337,341,340,332,342,341,340,341,343,342,343,341,339,340,344,343,344,340,344,345,339,346,344,343,346,345,344,347,343,342,343,347,346,342,348,347,346,347,349,348,349,347,345,346,350,349,350,346,351,350,349,352,349,348,349,352,351,348,353,352,350,354,345,354,350,351,355,354,351,351,356,355,356,351,352,352,357,356,352,353,357,358,356,357,355,356,358,359,355,358,358,360,359,357,361,358,361,357,353,360,358,361,353,362,361,361,363,360,361,362,363,363,362,364,360,363,365,364,365,363,365,366,360,359,360,366,366,365,367,364,367,365,367,364,368,367,369,366,359,366,369,369,370,359,369,367,371,368,371,367,371,372,369,372,370,369,372,371,373,368,373,371,370,372,374,373,374,372,374,375,370,376,374,373,376,375,374,377,373,368,373,377,376,368,378,377,376,377,379,378,379,377,375,376,380,379,380,376,380,381,375,382,380,379,382,381,380,383,379,378,379,383,382,378,384,383,382,383,385,384,385,383,381,382,386,385,386,382,387,386,385,388,385,384,385,388,387,384,389,388,386,390,381,390,386,387,391,390,387,387,392,391,392,387,388,388,393,392,388,389,393,394,392,393,391,392,394,395,391,394,394,396,395,393,397,394,397,393,389,396,394,397,389,398,397,397,399,396,397,398,399,399,398,400,396,399,401,400,401,399,401,402,396,395,396,402,402,401,403,400,403,401,403,400,404,403,405,402,395,402,405,405,406,395,405,403,407,404,407,403,407,408,405,408,406,405,408,407,409,404,409,407,406,408,410,409,410,408,410,411,406,412,410,409,412,411,410,413,409,404,409,413,412,404,414,413,412,413,415,414,415,413,411,412,416,415,416,412,416,417,411,418,416,415,418,417,416,419,415,414,415,419,418,414,420,419,418,419,421,420,421,419,417,418,422,421,422,418,423,422,421,424,421,420,421,424,423,420,425,424,422,426,417,426,422,423,427,426,423,423,428,427,428,423,424,424,429,428,424,425,429,430,428,429,427,428,430,431,429,425,429,431,430,432,427,430,430,433,432,433,430,431,431,434,433,431,435,434,425,435,431,427,432,436,436,437,427,438,437,436,439,427,437,439,437,438,427,439,440,440,426,427,438,441,439,441,440,439,426,440,442,417,426,442,443,442,440,440,441,443,444,441,438,438,445,444,442,446,417,442,443,446,441,444,447,441,447,443,448,444,445,448,447,444,448,445,449,417,446,450,411,417,450,446,443,451,451,450,446,443,447,452,443,452,451,453,448,449,453,449,454,455,447,448,455,452,447,453,455,448,450,456,411,450,451,456,457,453,454,457,454,458,459,455,453,457,459,453,460,452,455,459,460,455,411,456,461,406,411,461,451,452,462,460,462,452,456,451,463,463,461,456,451,462,463,464,457,458,464,458,465,466,459,457,464,466,457,461,467,406,461,463,467,468,460,459,466,468,459,469,462,460,468,469,460,470,464,465,470,465,471,472,470,471,406,467,473,395,406,473,463,462,474,469,474,462,467,463,475,475,473,467,463,474,475,470,476,464,476,466,464,473,477,395,473,475,477,477,475,478,395,477,479,478,479,477,391,395,479,475,474,480,475,480,478,481,476,470,482,481,470,476,483,466,483,468,466,479,484,391,478,484,479,485,391,484,485,484,478,391,485,486,486,390,391,478,487,485,487,486,485,390,486,488,381,390,488,489,488,486,486,487,489,490,487,478,478,480,490,488,491,381,488,489,491,487,490,492,487,492,489,493,490,480,493,492,490,381,491,494,375,381,494,491,489,495,495,494,491,489,492,496,489,496,495,494,497,375,494,495,497,375,497,498,370,375,498,497,495,499,499,498,497,498,500,370,498,499,500,370,500,501,359,370,501,502,501,500,500,499,502,495,503,499,495,496,503,504,496,492,504,492,493,501,505,359,501,502,505,505,502,506,359,505,507,506,507,505,355,359,507,499,508,502,499,503,508,509,503,496,509,496,504,502,510,506,502,508,510,511,508,503,511,503,509,507,512,355,506,512,507,513,355,512,513,512,506,355,513,514,514,354,355,506,515,513,515,514,513,354,514,516,345,354,516,517,516,514,514,515,517,518,515,506,506,510,518,516,519,345,516,517,519,515,518,520,515,520,517,521,518,510,521,520,518,345,519,522,339,345,522,519,517,523,523,522,519,517,520,524,517,524,523,522,525,339,522,523,525,339,525,526,334,339,526,525,523,527,527,526,525,526,528,334,526,527,528,334,528,529,323,334,529,530,529,528,528,527,530,523,531,527,523,524,531,532,524,520,532,520,521,529,533,323,529,530,533,533,530,534,323,533,535,534,535,533,319,323,535,527,536,530,527,531,536,537,531,524,537,524,532,530,538,534,530,536,538,539,536,531,539,531,537,535,540,319,534,540,535,541,319,540,541,540,534,319,541,542,542,318,319,534,543,541,543,542,541,318,542,544,309,318,544,545,544,542,542,543,545,546,543,534,534,538,546,544,547,309,544,545,547,543,546,548,543,548,545,549,546,538,549,548,546,309,547,550,303,309,550,547,545,551,551,550,547,545,548,552,545,552,551,550,553,303,550,551,553,303,553,554,298,303,554,553,551,555,555,554,553,554,556,298,554,555,556,298,556,557,289,298,557,558,557,556,556,555,558,551,559,555,551,552,559,560,552,548,560,548,549,557,561,289,557,558,561,561,558,562,289,561,563,562,563,561,284,289,563,555,564,558,555,559,564,565,559,552,565,552,560,558,566,562,558,564,566,567,564,559,567,559,565,563,568,284,562,568,563,569,284,568,569,568,562,284,569,570,570,283,284,562,571,569,571,570,569,283,570,572,276,283,572,573,572,570,570,571,573,574,571,562,562,566,574,572,575,276,572,573,575,571,574,576,571,576,573,577,574,566,577,576,574,276,575,578,271,276,578,575,573,579,579,578,575,573,576,580,573,580,579,578,581,271,578,579,581,271,581,582,266,271,582,581,579,583,583,582,581,582,584,266,582,583,584,266,584,585,264,266,585,586,585,584,584,583,586,585,587,264,585,586,587,264,587,588,589,588,587,587,586,589,586,590,589,586,591,590,583,591,586,592,590,591,579,593,583,583,593,591,579,580,593,592,591,594,594,591,593,595,592,594,596,593,580,594,593,596,595,594,597,597,594,596,598,595,597,596,580,599,599,580,576,599,576,577,598,597,600,601,598,600,597,596,602,602,596,599,600,597,602,603,599,577,602,599,603,601,600,604,605,601,604,600,602,606,606,602,603,604,600,606,603,577,607,577,566,607,607,566,564,607,564,567,603,607,608,606,603,608,608,607,567,604,606,609,606,608,609,608,567,610,609,608,610,610,567,565,605,604,611,604,609,611,609,610,612,611,609,612,610,565,613,612,610,613,613,565,560,605,611,614,615,605,614,611,612,616,614,611,616,612,613,617,616,612,617,613,560,618,617,613,618,618,560,549,618,549,619,549,538,619,619,538,536,619,536,539,618,619,620,617,618,620,620,619,539,616,617,621,617,620,621,620,539,622,621,620,622,622,539,537,616,621,623,614,616,623,621,622,624,623,621,624,622,537,625,624,622,625,625,537,532,614,623,626,627,614,626,623,624,628,626,623,628,624,625,629,628,624,629,625,532,630,629,625,630,630,532,521,630,521,631,521,510,631,631,510,508,631,508,511,630,631,632,629,630,632,632,631,511,628,629,633,629,632,633,632,511,634,633,632,634,634,511,509,628,633,635,626,628,635,633,634,636,635,633,636,634,509,637,636,634,637,637,509,504,626,635,481,638,626,481,481,635,639,635,636,639,481,639,476,639,483,476,639,636,640,636,637,640,639,640,483,637,504,641,640,637,641,641,504,493,640,642,483,640,641,642,483,642,468,642,469,468,641,493,643,641,643,642,642,643,469,493,480,643,643,474,469,643,480,474,241,222,644,241,644,249,644,222,219,249,644,645,219,645,644,645,646,249,248,249,646,645,219,647,646,645,647,248,646,648,647,648,646,648,292,248,649,647,219,219,215,649,650,648,647,292,648,650,647,649,650,215,651,649,650,649,651,292,650,652,651,652,650,652,296,292,653,296,652,653,652,651,306,296,653,654,651,215,651,654,653,215,212,654,653,655,306,655,653,654,212,656,654,654,656,655,657,306,655,657,655,656,312,306,657,658,656,212,656,658,657,212,211,658,657,659,312,659,657,658,211,660,658,658,660,659,660,211,207,312,659,661,317,312,661,659,660,662,207,662,660,662,661,659,661,663,317,663,661,662,662,207,664,662,664,663,664,207,204,317,663,665,326,317,665,663,664,666,204,666,664,666,665,663,666,204,667,667,204,201,668,665,666,666,667,668,665,668,326,668,667,669,201,669,667,326,668,670,669,670,668,669,201,671,670,669,671,326,670,672,671,672,670,672,328,326,673,671,201,201,197,673,674,672,671,328,672,674,671,673,674,197,675,673,674,673,675,328,674,676,675,676,674,676,332,328,677,332,676,677,676,675,342,332,677,678,675,197,675,678,677,197,194,678,677,679,342,679,677,678,194,680,678,678,680,679,681,342,679,681,679,680,348,342,681,682,680,194,680,682,681,194,193,682,681,683,348,683,681,682,193,684,682,682,684,683,684,193,189,348,683,685,353,348,685,683,684,686,189,686,684,686,685,683,685,687,353,687,685,686,686,189,688,686,688,687,688,189,186,353,687,689,362,353,689,687,688,690,186,690,688,690,689,687,690,186,691,691,186,183,692,689,690,690,691,692,689,692,362,692,691,693,183,693,691,362,692,694,693,694,692,693,183,695,694,693,695,362,694,696,695,696,694,696,364,362,697,695,183,183,179,697,698,696,695,364,696,698,695,697,698,179,699,697,698,697,699,364,698,700,699,700,698,700,368,364,701,368,700,701,700,699,378,368,701,702,699,179,699,702,701,179,176,702,701,703,378,703,701,702,176,704,702,702,704,703,705,378,703,705,703,704,384,378,705,706,704,176,704,706,705,176,175,706,705,707,384,707,705,706,175,708,706,706,708,707,708,175,171,384,707,709,389,384,709,707,708,710,171,710,708,710,709,707,709,711,389,711,709,710,710,171,712,710,712,711,712,171,168,389,711,713,398,389,713,711,712,714,168,714,712,714,713,711,714,168,715,715,168,165,716,713,714,714,715,716,713,716,398,716,715,717,165,717,715,398,716,718,717,718,716,717,165,719,718,717,719,398,718,720,719,720,718,720,400,398,721,719,165,165,161,721,722,720,719,400,720,722,719,721,722,161,723,721,722,721,723,400,722,724,723,724,722,724,404,400,725,404,724,725,724,723,414,404,725,726,723,161,723,726,725,161,159,726,725,727,414,727,725,726,728,414,727,420,414,728,726,729,727,159,729,726,728,727,729,730,729,159,729,730,728,728,731,420,731,728,730,159,732,730,157,732,159,420,731,733,425,420,733,730,734,731,732,734,730,734,732,735,732,157,736,735,732,736,154,736,157,731,734,737,737,733,731,735,737,734,736,154,738,736,738,735,738,154,148,733,739,425,739,733,737,148,740,738,735,738,740,741,735,740,737,735,742,737,742,739,742,735,741,740,148,743,740,743,741,743,148,144,144,744,743,741,743,744,744,144,745,744,745,746,746,741,744,425,739,747,435,425,747,739,742,748,741,748,742,748,747,739,749,741,746,748,741,749,746,750,749,747,751,435,751,747,748,748,749,751,751,749,750,435,751,752,750,752,751, };
        #endregion
        
		private static Mesh _SkySphere;
        private static Mesh SkySphere
        {
            get
            {
                if (!_SkySphere)
                {
                    _SkySphere = new Mesh();
                    _SkySphere.vertices = skySphereVertices;
					_SkySphere.triangles = skySphereTriangles;
                    //Note: No need for normals for skybox shaders
                    
                    _SkySphere.hideFlags = HideFlags.DontSave;
                }
                return _SkySphere;
            }
        }
        
        public override void Render(PostProcessRenderContext context)
        {
            PropertySheet sheet = context.propertySheets.Get(shader);
            CommandBuffer cmd = context.command;

            Camera cam = context.camera;

            #region Skybox sampling
            if (settings.colorSource.value == Fog.FogColorSource.SkyboxColor)
            {
				//Note: Bugged in Forward rendering for the scene-view camera when using the default procedural sky.
                cmd.GetTemporaryRT(skyboxTexID, context.width / 2, context.height / 2, 0, FilterMode.Bilinear, context.sourceFormat);
                cmd.SetRenderTarget(skyboxTexID);

                cmd.DrawMesh(SkySphere, Matrix4x4.TRS(cam.transform.position, Quaternion.identity, Vector3.one * (cam.farClipPlane-10f)), RenderSettings.skybox, 0, 0);
            }
            #endregion

            #region Property value composition

            float FdotC = cam.transform.position.y - settings.height;
            float paramK = (FdotC <= 0.0f ? 1.0f : 0.0f);
            //Always exclude skybox for skybox color mode
            //Always include when using light scattering to avoid depth discontinuity
            float skyboxInfluence = (settings.lightScattering) ? 1.0f : settings.skyboxInfluence;
            float distanceFog = (settings.distanceFog) ? 1.0f : 0.0f;
            float heightFog = (settings.heightFog) ? 1.0f : 0.0f;

            int colorSource = (settings.useSceneSettings) ? 0 : (int)settings.colorSource.value;
            var sceneMode = (settings.useSceneSettings) ? RenderSettings.fogMode : settings.fogMode;
            var sceneDensity = (settings.useSceneSettings) ? RenderSettings.fogDensity : settings.globalDensity / 100;
            var sceneStart = (settings.useSceneSettings) ? RenderSettings.fogStartDistance : settings.fogStartDistance;
            var sceneEnd = (settings.useSceneSettings) ? RenderSettings.fogEndDistance : settings.fogEndDistance;

            bool linear = (sceneMode == FogMode.Linear);
            float diff = linear ? sceneEnd - sceneStart : 0.0f;
            float invDiff = Mathf.Abs(diff) > 0.0001f ? 1.0f / diff : 0.0f;

            Vector4 sceneParams;
            sceneParams.x = sceneDensity * 1.2011224087f; // density / sqrt(ln(2)), used by Exp2 fog mode
            sceneParams.y = sceneDensity * 1.4426950408f; // density / ln(2), used by Exp fog mode
            sceneParams.z = linear ? -invDiff : 0.0f;
            sceneParams.w = linear ? sceneEnd * invDiff : 0.0f;

            float gradientDistance = (settings.gradientUseFarClipPlane.value) ? settings.gradientDistance : context.camera.farClipPlane;
            #endregion

            #region Property assignment
            if (settings.heightNoiseTex.value) sheet.properties.SetTexture("_NoiseTex", settings.heightNoiseTex);
            if (settings.fogColorGradient.value) sheet.properties.SetTexture("_ColorGradient", settings.fogColorGradient);
            cmd.SetGlobalFloat("_FarClippingPlane", gradientDistance);
            cmd.SetGlobalVector("_SceneFogParams", sceneParams);
            cmd.SetGlobalVector("_SceneFogMode", new Vector4((int)sceneMode, settings.useRadialDistance ? 1 : 0, colorSource, settings.heightFogNoise ? 1 : 0));
            cmd.SetGlobalVector("_NoiseParams", new Vector4(settings.heightNoiseSize * 0.01f, settings.heightNoiseSpeed * 0.01f, settings.heightNoiseStrength, 0));
            cmd.SetGlobalVector("_DensityParams", new Vector4(settings.distanceDensity, settings.heightNoiseStrength, settings.skyboxMipLevel, 0));
            cmd.SetGlobalVector("_HeightParams", new Vector4(settings.height, FdotC, paramK, settings.heightDensity * 0.5f));
            cmd.SetGlobalVector("_DistanceParams", new Vector4(-sceneStart, 0f, distanceFog, heightFog));
            cmd.SetGlobalColor("_FogColor", (settings.useSceneSettings) ? RenderSettings.fogColor : settings.fogColor);
            cmd.SetGlobalVector("_SkyboxParams", new Vector4(skyboxInfluence, settings.skyboxMipLevel, 0, 0));

            Vector3 sunDir = (settings.useLightDirection && RenderSettings.sun) ? -RenderSettings.sun.transform.forward : settings.lightDirection.value.normalized;
            float sunIntensity = (settings.useLightIntensity && RenderSettings.sun) ? RenderSettings.sun.intensity : settings.lightIntensity.value;
            sunIntensity = (settings.enableDirectionalLight) ? sunIntensity : 0f;
            cmd.SetGlobalVector("_DirLightParams", new Vector4(sunDir.x, sunDir.y, sunDir.z, sunIntensity));

            Color sunColor = (settings.useLightColor && RenderSettings.sun) ? RenderSettings.sun.color : settings.lightColor.value;
            cmd.SetGlobalVector("_DirLightColor", new Vector4(sunColor.r, sunColor.g, sunColor.b, 0));

            #endregion

            #region Light scattering
            //Repurpose parts of the bloom effect
            bool enableScattering = (settings.lightScattering) ? true : false;

            if (enableScattering)
            {
                int tw = Mathf.FloorToInt(context.screenWidth / (2f));
                int th = Mathf.FloorToInt(context.screenHeight / (2f));
                bool singlePassDoubleWide = (context.stereoActive && (context.stereoRenderingMode == PostProcessRenderContext.StereoRenderingMode.SinglePass) && (context.camera.stereoTargetEye == StereoTargetEyeMask.Both));
                int tw_stereo = singlePassDoubleWide ? tw * 2 : tw;

                // Determine the iteration count
                int s = Mathf.Max(tw, th);
                float logs = Mathf.Log(s, 2f) + Mathf.Min(settings.scatterDiffusion.value, 10f) - 10f;
                int logs_i = Mathf.FloorToInt(logs);
                int iterations = Mathf.Clamp(logs_i, 1, k_MaxPyramidSize);
                float sampleScale = 0.5f + logs - logs_i;
                sheet.properties.SetFloat("_SampleScale", sampleScale);

                // Prefiltering parameters
                float lthresh = Mathf.GammaToLinearSpace(settings.scatterThreshold.value);
                float knee = lthresh * settings.scatterSoftKnee.value + 1e-5f;
                var threshold = new Vector4(lthresh, lthresh - knee, knee * 2f, 0.25f / knee);
                cmd.SetGlobalVector("_Threshold", threshold);

                // Downsample
                var lastDown = context.source;
                for (int i = 0; i < iterations; i++)
                {
                    int mipDown = m_Pyramid[i].down;
                    int mipUp = m_Pyramid[i].up;
                    int pass = i == 0 ? (int)Pass.Prefilter : (int)Pass.Downsample;

                    context.GetScreenSpaceTemporaryRT(cmd, mipDown, 0, context.sourceFormat, RenderTextureReadWrite.Default, FilterMode.Bilinear, tw_stereo, th);
                    context.GetScreenSpaceTemporaryRT(cmd, mipUp, 0, context.sourceFormat, RenderTextureReadWrite.Default, FilterMode.Bilinear, tw_stereo, th);
                    cmd.BlitFullscreenTriangle(lastDown, mipDown, sheet, pass);

                    lastDown = mipDown;
                    tw_stereo = (singlePassDoubleWide && ((tw_stereo / 2) % 2 > 0)) ? 1 + tw_stereo / 2 : tw_stereo / 2;
                    tw_stereo = Mathf.Max(tw_stereo, 1);
                    th = Mathf.Max(th / 2, 1);
                }

                // Upsample
                int lastUp = m_Pyramid[iterations - 1].down;
                for (int i = iterations - 2; i >= 0; i--)
                {
                    int mipDown = m_Pyramid[i].down;
                    int mipUp = m_Pyramid[i].up;
                    cmd.SetGlobalTexture("_BloomTex", mipDown);
                    cmd.BlitFullscreenTriangle(lastUp, mipUp, sheet, (int)Pass.Upsample);
                    lastUp = mipUp;
                }

                float intensity = RuntimeUtilities.Exp2(settings.scatterIntensity.value / 10f) - 1f;
                var shaderSettings = new Vector4(sampleScale, intensity, 0, iterations);
                cmd.SetGlobalVector("_ScatteringParams", shaderSettings);

                cmd.SetGlobalTexture("_BloomTex", lastUp);

                // Cleanup
                for (int i = 0; i < iterations; i++)
                {
                    if (m_Pyramid[i].down != lastUp)
                        cmd.ReleaseTemporaryRT(m_Pyramid[i].down);
                    if (m_Pyramid[i].up != lastUp)
                        cmd.ReleaseTemporaryRT(m_Pyramid[i].up);
                }
                
                if (settings.colorSource.value == Fog.FogColorSource.SkyboxColor) cmd.ReleaseTemporaryRT(skyboxTexID);
            }

            #endregion

            #region shader passes
            context.command.BlitFullscreenTriangle(context.source, context.destination, sheet, enableScattering ? (int)Pass.BlendScattering : (int)Pass.Blend);
            #endregion

        }

        public override DepthTextureMode GetCameraFlags()
        {
            return DepthTextureMode.Depth;
        }
    }
}